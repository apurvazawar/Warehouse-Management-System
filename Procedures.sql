
---------------------------------------------------------

---------------------------------------------------------

CREATE OR REPLACE PROCEDURE ORDER_SHIPPING
AS
   VAR_ORDERID   VARCHAR2 (10);
   TASKPACKTOSHIPSTATUS VARCHAR2(100);

   CURSOR CUR_ORDER
   IS
      SELECT DISTINCT O.ORDER_ID 
        FROM ORDER_DETAILS OD JOIN ORDERS O ON O.ORDER_ID = OD.ORDER_ID
       WHERE STATUS = 'PACKING';
BEGIN
FOR RCUR_ORDER IN CUR_ORDER
   LOOP
      BEGIN
         VAR_ORDERID := RCUR_ORDER.ORDER_ID;
         MERGE INTO ORDERS B
              USING (SELECT DISTINCT OD.ITEM_ID, OD.QTY,O.ORDER_ID
                       FROM ORDER_DETAILS OD JOIN ORDERS O ON O.ORDER_ID = OD.ORDER_ID
                      WHERE OD.ORDER_ID = VAR_ORDERID ) E
                 ON (E.ORDER_ID = B.ORDER_ID)
         WHEN MATCHED
         THEN
            UPDATE SET STATUS = 'SHIPPED'
            WHERE STATUS = 'PACKING' AND ORDER_ID = VAR_ORDERID;    
DBMS_OUTPUT.PUT_LINE ('ORDER IS SHIPPED');


         TASKPACKTOSHIPSTATUS :=   TASK_PACK_TO_SHIP();

DBMS_OUTPUT.PUT_LINE ('TASK IS COMPLTED');

         
             END;
            END LOOP;
        END;
/

---------------------------------------------------------

---------------------------------------------------------

CREATE OR REPLACE PROCEDURE INCR_QTY IS
BEGIN
    EXECUTE IMMEDIATE 'UPDATE ITEM SET QTY = QTY + 10000';
    EXECUTE IMMEDIATE 'UPDATE ITEMXLOC SET QTY = QTY + 10000';
    EXECUTE IMMEDIATE 'UPDATE ITEMXLOCXID SET QTY = QTY + 10000';
    EXECUTE IMMEDIATE 'UPDATE PURCHASE_ORDER SET PO_DATE = ''05-AUG-20'' WHERE PO_ID IN (2,6,11,17,69,420)';
    EXECUTE IMMEDIATE 'UPDATE ORDERS SET ORDER_DATE = ''05-AUG-20'' WHERE ORDER_ID IN (2,6,11,17,69,420)';
END;
/

EXEC INCR_QTY;